createAggregateRoles: true

crds:
  keep: false

global:
  domain: argocd.bongima.be

configs:
  cm:
    exec.enabled: true
    application.instanceLabelKey: argocd.argoproj.io/instance
    application.resourceTrackingMethod: annotation+label
    installationID: management-cluster
    statusbadge.enabled: true
  params:
    #controller
    controller.status.processors: "1"
    controller.operation.processors: "1"
    controller.sync.timeout.seconds: "300"
    controller.resource.health.persist: "true"
    controller.kubectl.parallelism.limit: "1"
    controller.k8sclient.retry.max: "3"
    controller.k8sclient.retry.base.backoff: "2000"
    controller.diff.server.side: "true"
    controller.cluster.cache.batch.events.processing: "true"
    #server
    server.insecure: "true"
    server.k8sclient.retry.max: "3"
    server.k8sclient.retry.base.backoff: "2000"
    #reposerver
    reposerver.parallelism.limit: "1"
    reposerver.git.lsremote.parallelism.limit: "5"
    #applicationset controller
    applicationsetcontroller.enable.leader.election: "true"
    applicationsetcontroller.concurrent.reconciliations.max: "1"
  cmp:
    create: true
    plugins:
      avp:
        discover:
          fileName: "*.avp.yaml"
        generate:
          command:
            - argocd-vault-plugin
            - generate
            - "."
        allowConcurrency: true
        lockRepo: false

dex:
  enabled: false

redis-ha:
  enabled: false
  persistentVolume:
    enabled: true

controller:
  replicas: 1
  clusterRoleRules:
    enabled: true
    rules:
      - apiGroups:
          - "*"
        resources:
          - "*"
        verbs:
          - "*"

server:
  replicas: 2
  clusterRoleRules:
    enabled: true
    rules:
      - apiGroups:
          - "*"
        resources:
          - "*"
        verbs:
          - "*"

repoServer:
  replicas: 2
  clusterRoleRules:
    enabled: true
    rules:
      - apiGroups:
          - "*"
        resources:
          - "*"
        verbs:
          - "*"
  volumes:
    - configMap:
        name: argocd-cmp-cm
      name: argocd-cmp-cm
    - emptyDir: {}
      name: cmp-tmp
    - name: custom-tools
      emptyDir: {}
  initContainers:
    - name: download-tools
      image: registry.access.redhat.com/ubi8
      env:
        - name: AVP_VERSION
          value: 1.18.1
      command: [sh, -c]
      args:
        - >-
          curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  extraContainers:
    - name: avp
      command: [/var/run/argocd/argocd-cmp-server]
      image: registry.access.redhat.com/ubi8
      env:
        - name: AVP_TYPE
          value: kubernetessecret
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: avp.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin

applicationSet:
  replicas: 2
